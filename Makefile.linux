ROOT = ../../
CCFLAGS = -Wall -ggdb -Iinclude -std=gnu11 -O1 -DNATIVE \
		-Wall -Wextra -Wpedantic -Wstrict-aliasing -m32
LDFLAGS = 
LD = ld
CC = gcc 
AS = as
MAKEFLAGS += --no-print-directory

OUTPUT = cc

SRC_DIR = src
OUTPUTDIR = ./bin/

SRC_FILES = $(wildcard $(SRC_DIR)/*.c) $(wildcard $(SRC_DIR)/*/*.c)
OBJ_FILES = $(SRC_FILES:$(SRC_DIR)/%.c=$(OUTPUTDIR)%.o)
TESTS := $(wildcard ./tests/*)

.PHONY: all clean depend demo tests

all: $(OUTPUT)

$(OUTPUT): $(OBJ_FILES)
	$(CC) -o $@ $(OBJ_FILES) $(CCFLAGS)

$(OUTPUTDIR)%.o: $(SRC_DIR)/%.c
	@mkdir -p $(OUTPUTDIR) $(dir $@)
	$(CC) $(CCFLAGS) -c $< -o $@

clean:
	rm -rf $(OUTPUTDIR)* *.o *.d $(OUTPUT) .depend

depend: .depend

.depend: $(SRC_FILES)
	rm -f ./.depend
	$(CC) $(CCFLAGS) -MM $^ > ./.depend;

include .depend

demo: $(OUTPUT)
	./$(OUTPUT) ./demo/main.c
	chmod 777 output.o

tests: $(OUTPUT)
	@for file in $(TESTS); do \
		echo "[TEST $$file]"; \
		./$(OUTPUT) --elf $$file; \
		./a.out; \
	done